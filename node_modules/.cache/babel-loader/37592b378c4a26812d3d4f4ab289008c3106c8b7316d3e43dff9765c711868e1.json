{"ast":null,"code":"var _jsxFileName = \"/home/zeus/repos/CVBuilder/src/components/Skills.jsx\",\n  _s = $RefreshSig$();\n// Skills.jsx\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Skills({\n  setFormData\n}) {\n  _s();\n  const [skills, setSkills] = useState({\n    skill: \"\"\n  });\n  useEffect(() => {\n    // Check if the \"ADD\" button is clicked before updating the CV\n    if (skills.skill && skills.skill.trim() !== \"\") {\n      setFormData(prevData => ({\n        ...prevData,\n        skills: [skills.skill, ...prevData.skills]\n      }));\n      setSkills({\n        skill: \"\"\n      });\n    }\n  }, [skills, setFormData]);\n  const handleAddSkill = () => {\n    // No need to setSkills here; it will be handled by the useEffect hook\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"skillInput\",\n    children: [/*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"skill\",\n        children: \"Skill Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"skill\",\n        id: \"skill\",\n        value: skills.skill,\n        onChange: e => setSkills({\n          skill: e.target.value\n        }),\n        placeholder: \"Add skill\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddSkill,\n      children: \"ADD\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(Skills, \"khR5jVB/ay2g87ZboNgp13e7Q5I=\");\n_c = Skills;\nexport default Skills;\nvar _c;\n$RefreshReg$(_c, \"Skills\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Skills","setFormData","_s","skills","setSkills","skill","trim","prevData","handleAddSkill","className","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","name","id","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["/home/zeus/repos/CVBuilder/src/components/Skills.jsx"],"sourcesContent":["// Skills.jsx\r\nimport React, { useState, useEffect } from \"react\";\r\n\r\nfunction Skills({ setFormData }) {\r\n  const [skills, setSkills] = useState({\r\n    skill: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    // Check if the \"ADD\" button is clicked before updating the CV\r\n    if (skills.skill && skills.skill.trim() !== \"\") {\r\n      setFormData((prevData) => ({\r\n        ...prevData,\r\n        skills: [skills.skill, ...prevData.skills],\r\n      }));\r\n      setSkills({\r\n        skill: \"\",\r\n      });\r\n    }\r\n  }, [skills, setFormData]);\r\n\r\n  const handleAddSkill = () => {\r\n    // No need to setSkills here; it will be handled by the useEffect hook\r\n  };\r\n\r\n  return (\r\n    <div className=\"skillInput\">\r\n      <fieldset>\r\n        <label htmlFor=\"skill\">Skill Name</label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"skill\"\r\n          id=\"skill\"\r\n          value={skills.skill}\r\n          onChange={(e) => setSkills({ skill: e.target.value })}\r\n          placeholder=\"Add skill\"\r\n        />\r\n      </fieldset>\r\n      <button onClick={handleAddSkill}>ADD</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Skills;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,MAAMA,CAAC;EAAEC;AAAY,CAAC,EAAE;EAAAC,EAAA;EAC/B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC;IACnCS,KAAK,EAAE;EACT,CAAC,CAAC;EAEFR,SAAS,CAAC,MAAM;IACd;IACA,IAAIM,MAAM,CAACE,KAAK,IAAIF,MAAM,CAACE,KAAK,CAACC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MAC9CL,WAAW,CAAEM,QAAQ,KAAM;QACzB,GAAGA,QAAQ;QACXJ,MAAM,EAAE,CAACA,MAAM,CAACE,KAAK,EAAE,GAAGE,QAAQ,CAACJ,MAAM;MAC3C,CAAC,CAAC,CAAC;MACHC,SAAS,CAAC;QACRC,KAAK,EAAE;MACT,CAAC,CAAC;IACJ;EACF,CAAC,EAAE,CAACF,MAAM,EAAEF,WAAW,CAAC,CAAC;EAEzB,MAAMO,cAAc,GAAGA,CAAA,KAAM;IAC3B;EAAA,CACD;EAED,oBACET,OAAA;IAAKU,SAAS,EAAC,YAAY;IAAAC,QAAA,gBACzBX,OAAA;MAAAW,QAAA,gBACEX,OAAA;QAAOY,OAAO,EAAC,OAAO;QAAAD,QAAA,EAAC;MAAU;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACzChB,OAAA;QACEiB,IAAI,EAAC,MAAM;QACXC,IAAI,EAAC,OAAO;QACZC,EAAE,EAAC,OAAO;QACVC,KAAK,EAAEhB,MAAM,CAACE,KAAM;QACpBe,QAAQ,EAAGC,CAAC,IAAKjB,SAAS,CAAC;UAAEC,KAAK,EAAEgB,CAAC,CAACC,MAAM,CAACH;QAAM,CAAC,CAAE;QACtDI,WAAW,EAAC;MAAW;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACM,CAAC,eACXhB,OAAA;MAAQyB,OAAO,EAAEhB,cAAe;MAAAE,QAAA,EAAC;IAAG;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1C,CAAC;AAEV;AAACb,EAAA,CAtCQF,MAAM;AAAAyB,EAAA,GAANzB,MAAM;AAwCf,eAAeA,MAAM;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}