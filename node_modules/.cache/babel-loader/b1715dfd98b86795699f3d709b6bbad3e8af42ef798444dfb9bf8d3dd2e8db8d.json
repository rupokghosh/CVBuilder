{"ast":null,"code":"var _jsxFileName = \"/home/zeus/repos/CVBuilder/src/components/Experience.jsx\",\n  _s = $RefreshSig$();\n// Experience.jsx\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Experience({\n  setFormData\n}) {\n  _s();\n  const [experience, setExperience] = useState({\n    companyName: \"\",\n    positionName: \"\",\n    startDate: \"\",\n    endDate: \"\"\n  });\n  useEffect(() => {\n    // Check if all required fields are filled before adding to CV\n    if (experience.companyName && experience.positionName && experience.startDate && experience.endDate) {\n      setFormData(prevData => ({\n        ...prevData,\n        experience: [...prevData.experience, experience]\n      }));\n      setExperience({\n        companyName: \"\",\n        positionName: \"\",\n        startDate: \"\",\n        endDate: \"\"\n      });\n    }\n  }, [experience, setFormData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"experienceInput\",\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Add Experience\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(Experience, \"pfXCjztCACQ71CqEXatIPRgZ2gs=\");\n_c = Experience;\nexport default Experience;\nvar _c;\n$RefreshReg$(_c, \"Experience\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Experience","setFormData","_s","experience","setExperience","companyName","positionName","startDate","endDate","prevData","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/zeus/repos/CVBuilder/src/components/Experience.jsx"],"sourcesContent":["// Experience.jsx\r\nimport React, { useState, useEffect } from \"react\";\r\n\r\nfunction Experience({ setFormData }) {\r\n  const [experience, setExperience] = useState({\r\n    companyName: \"\",\r\n    positionName: \"\",\r\n    startDate: \"\",\r\n    endDate: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    // Check if all required fields are filled before adding to CV\r\n    if (experience.companyName && experience.positionName && experience.startDate && experience.endDate) {\r\n      setFormData((prevData) => ({\r\n        ...prevData,\r\n        experience: [...prevData.experience, experience],\r\n      }));\r\n      setExperience({\r\n        companyName: \"\",\r\n        positionName: \"\",\r\n        startDate: \"\",\r\n        endDate: \"\",\r\n      });\r\n    }\r\n  }, [experience, setFormData]);\r\n\r\n  return (\r\n    <div className=\"experienceInput\">\r\n      {/* ... (similar structure as Education) */}\r\n      <button>Add Experience</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Experience;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,UAAUA,CAAC;EAAEC;AAAY,CAAC,EAAE;EAAAC,EAAA;EACnC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC;IAC3CS,WAAW,EAAE,EAAE;IACfC,YAAY,EAAE,EAAE;IAChBC,SAAS,EAAE,EAAE;IACbC,OAAO,EAAE;EACX,CAAC,CAAC;EAEFX,SAAS,CAAC,MAAM;IACd;IACA,IAAIM,UAAU,CAACE,WAAW,IAAIF,UAAU,CAACG,YAAY,IAAIH,UAAU,CAACI,SAAS,IAAIJ,UAAU,CAACK,OAAO,EAAE;MACnGP,WAAW,CAAEQ,QAAQ,KAAM;QACzB,GAAGA,QAAQ;QACXN,UAAU,EAAE,CAAC,GAAGM,QAAQ,CAACN,UAAU,EAAEA,UAAU;MACjD,CAAC,CAAC,CAAC;MACHC,aAAa,CAAC;QACZC,WAAW,EAAE,EAAE;QACfC,YAAY,EAAE,EAAE;QAChBC,SAAS,EAAE,EAAE;QACbC,OAAO,EAAE;MACX,CAAC,CAAC;IACJ;EACF,CAAC,EAAE,CAACL,UAAU,EAAEF,WAAW,CAAC,CAAC;EAE7B,oBACEF,OAAA;IAAKW,SAAS,EAAC,iBAAiB;IAAAC,QAAA,eAE9BZ,OAAA;MAAAY,QAAA,EAAQ;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5B,CAAC;AAEV;AAACb,EAAA,CA9BQF,UAAU;AAAAgB,EAAA,GAAVhB,UAAU;AAgCnB,eAAeA,UAAU;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}